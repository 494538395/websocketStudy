// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.3
// source: sdk_ws/ws.proto

package main

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgContentType int32

const (
	MsgContentType_None      MsgContentType = 0
	MsgContentType_Changes   MsgContentType = 1 // 变化
	MsgContentType_LastState MsgContentType = 2 // 最终状态
)

// Enum value maps for MsgContentType.
var (
	MsgContentType_name = map[int32]string{
		0: "None",
		1: "Changes",
		2: "LastState",
	}
	MsgContentType_value = map[string]int32{
		"None":      0,
		"Changes":   1,
		"LastState": 2,
	}
)

func (x MsgContentType) Enum() *MsgContentType {
	p := new(MsgContentType)
	*p = x
	return p
}

func (x MsgContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_sdk_ws_ws_proto_enumTypes[0].Descriptor()
}

func (MsgContentType) Type() protoreflect.EnumType {
	return &file_sdk_ws_ws_proto_enumTypes[0]
}

func (x MsgContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgContentType.Descriptor instead.
func (MsgContentType) EnumDescriptor() ([]byte, []int) {
	return file_sdk_ws_ws_proto_rawDescGZIP(), []int{0}
}

type GetMaxAndMinSeqReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupIDList []string `protobuf:"bytes,1,rep,name=groupIDList,proto3" json:"groupIDList,omitempty"`
	UserID      string   `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	OperationID string   `protobuf:"bytes,3,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *GetMaxAndMinSeqReq) Reset() {
	*x = GetMaxAndMinSeqReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_ws_ws_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMaxAndMinSeqReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMaxAndMinSeqReq) ProtoMessage() {}

func (x *GetMaxAndMinSeqReq) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_ws_ws_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMaxAndMinSeqReq.ProtoReflect.Descriptor instead.
func (*GetMaxAndMinSeqReq) Descriptor() ([]byte, []int) {
	return file_sdk_ws_ws_proto_rawDescGZIP(), []int{0}
}

func (x *GetMaxAndMinSeqReq) GetGroupIDList() []string {
	if x != nil {
		return x.GroupIDList
	}
	return nil
}

func (x *GetMaxAndMinSeqReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetMaxAndMinSeqReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type GetMaxAndMinSeqResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxSeq            uint32                   `protobuf:"varint,1,opt,name=maxSeq,proto3" json:"maxSeq,omitempty"`
	MinSeq            uint32                   `protobuf:"varint,2,opt,name=minSeq,proto3" json:"minSeq,omitempty"`
	ErrCode           int32                    `protobuf:"varint,3,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg            string                   `protobuf:"bytes,4,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	GroupMaxAndMinSeq map[string]*MaxAndMinSeq `protobuf:"bytes,5,rep,name=groupMaxAndMinSeq,proto3" json:"groupMaxAndMinSeq,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetMaxAndMinSeqResp) Reset() {
	*x = GetMaxAndMinSeqResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_ws_ws_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMaxAndMinSeqResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMaxAndMinSeqResp) ProtoMessage() {}

func (x *GetMaxAndMinSeqResp) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_ws_ws_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMaxAndMinSeqResp.ProtoReflect.Descriptor instead.
func (*GetMaxAndMinSeqResp) Descriptor() ([]byte, []int) {
	return file_sdk_ws_ws_proto_rawDescGZIP(), []int{1}
}

func (x *GetMaxAndMinSeqResp) GetMaxSeq() uint32 {
	if x != nil {
		return x.MaxSeq
	}
	return 0
}

func (x *GetMaxAndMinSeqResp) GetMinSeq() uint32 {
	if x != nil {
		return x.MinSeq
	}
	return 0
}

func (x *GetMaxAndMinSeqResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *GetMaxAndMinSeqResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *GetMaxAndMinSeqResp) GetGroupMaxAndMinSeq() map[string]*MaxAndMinSeq {
	if x != nil {
		return x.GroupMaxAndMinSeq
	}
	return nil
}

type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_ws_ws_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_ws_ws_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_sdk_ws_ws_proto_rawDescGZIP(), []int{2}
}

func (x *CommonResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *CommonResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier int32  `protobuf:"varint,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Operation  string `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
	MsgId      string `protobuf:"bytes,3,opt,name=msgId,proto3" json:"msgId,omitempty"`
	// Types that are assignable to Data:
	//	*Req_SendMsgReq
	//	*Req_PullMsgBySeqListReq
	//	*Req_MaxAndMinSeqReq
	Data isReq_Data `protobuf_oneof:"data"`
}

func (x *Req) Reset() {
	*x = Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_ws_ws_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req) ProtoMessage() {}

func (x *Req) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_ws_ws_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req.ProtoReflect.Descriptor instead.
func (*Req) Descriptor() ([]byte, []int) {
	return file_sdk_ws_ws_proto_rawDescGZIP(), []int{3}
}

func (x *Req) GetIdentifier() int32 {
	if x != nil {
		return x.Identifier
	}
	return 0
}

func (x *Req) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *Req) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (m *Req) GetData() isReq_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Req) GetSendMsgReq() *SendMsgReq {
	if x, ok := x.GetData().(*Req_SendMsgReq); ok {
		return x.SendMsgReq
	}
	return nil
}

func (x *Req) GetPullMsgBySeqListReq() *PullMsgBySeqListReq {
	if x, ok := x.GetData().(*Req_PullMsgBySeqListReq); ok {
		return x.PullMsgBySeqListReq
	}
	return nil
}

func (x *Req) GetMaxAndMinSeqReq() *GetMsgMaxAndMinSeqReq {
	if x, ok := x.GetData().(*Req_MaxAndMinSeqReq); ok {
		return x.MaxAndMinSeqReq
	}
	return nil
}

type isReq_Data interface {
	isReq_Data()
}

type Req_SendMsgReq struct {
	SendMsgReq *SendMsgReq `protobuf:"bytes,4,opt,name=sendMsgReq,proto3,oneof"`
}

type Req_PullMsgBySeqListReq struct {
	PullMsgBySeqListReq *PullMsgBySeqListReq `protobuf:"bytes,5,opt,name=pullMsgBySeqListReq,proto3,oneof"`
}

type Req_MaxAndMinSeqReq struct {
	MaxAndMinSeqReq *GetMsgMaxAndMinSeqReq `protobuf:"bytes,6,opt,name=maxAndMinSeqReq,proto3,oneof"`
}

func (*Req_SendMsgReq) isReq_Data() {}

func (*Req_PullMsgBySeqListReq) isReq_Data() {}

func (*Req_MaxAndMinSeqReq) isReq_Data() {}

// @send chat.send
type SendMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event string `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Data  []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Topic int32  `protobuf:"varint,3,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *SendMsgReq) Reset() {
	*x = SendMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_ws_ws_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgReq) ProtoMessage() {}

func (x *SendMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_ws_ws_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgReq.ProtoReflect.Descriptor instead.
func (*SendMsgReq) Descriptor() ([]byte, []int) {
	return file_sdk_ws_ws_proto_rawDescGZIP(), []int{4}
}

func (x *SendMsgReq) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *SendMsgReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SendMsgReq) GetTopic() int32 {
	if x != nil {
		return x.Topic
	}
	return 0
}

// GetMsgBySeqList
type PullMsgBySeqListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicSeqList map[int32]*SeqList `protobuf:"bytes,1,rep,name=topicSeqList,proto3" json:"topicSeqList,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PullMsgBySeqListReq) Reset() {
	*x = PullMsgBySeqListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_ws_ws_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullMsgBySeqListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullMsgBySeqListReq) ProtoMessage() {}

func (x *PullMsgBySeqListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_ws_ws_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullMsgBySeqListReq.ProtoReflect.Descriptor instead.
func (*PullMsgBySeqListReq) Descriptor() ([]byte, []int) {
	return file_sdk_ws_ws_proto_rawDescGZIP(), []int{5}
}

func (x *PullMsgBySeqListReq) GetTopicSeqList() map[int32]*SeqList {
	if x != nil {
		return x.TopicSeqList
	}
	return nil
}

type SeqList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqList []uint32 `protobuf:"varint,1,rep,packed,name=seqList,proto3" json:"seqList,omitempty"`
}

func (x *SeqList) Reset() {
	*x = SeqList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_ws_ws_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeqList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeqList) ProtoMessage() {}

func (x *SeqList) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_ws_ws_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeqList.ProtoReflect.Descriptor instead.
func (*SeqList) Descriptor() ([]byte, []int) {
	return file_sdk_ws_ws_proto_rawDescGZIP(), []int{6}
}

func (x *SeqList) GetSeqList() []uint32 {
	if x != nil {
		return x.SeqList
	}
	return nil
}

// GetMaxAndMinSeq
type GetMsgMaxAndMinSeqReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicList []int32 `protobuf:"varint,1,rep,packed,name=topicList,proto3" json:"topicList,omitempty"`
}

func (x *GetMsgMaxAndMinSeqReq) Reset() {
	*x = GetMsgMaxAndMinSeqReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_ws_ws_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMsgMaxAndMinSeqReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMsgMaxAndMinSeqReq) ProtoMessage() {}

func (x *GetMsgMaxAndMinSeqReq) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_ws_ws_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMsgMaxAndMinSeqReq.ProtoReflect.Descriptor instead.
func (*GetMsgMaxAndMinSeqReq) Descriptor() ([]byte, []int) {
	return file_sdk_ws_ws_proto_rawDescGZIP(), []int{7}
}

func (x *GetMsgMaxAndMinSeqReq) GetTopicList() []int32 {
	if x != nil {
		return x.TopicList
	}
	return nil
}

type Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier int32  `protobuf:"varint,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Operation  string `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
	MsgId      string `protobuf:"bytes,3,opt,name=msgId,proto3" json:"msgId,omitempty"`
	// Types that are assignable to Data:
	//	*Resp_PushData
	//	*Resp_PullMsgBySeqListResp
	//	*Resp_MaxAndMinSeqResp
	//	*Resp_PullSeqFinishResp
	//	*Resp_NetworkErr
	//	*Resp_SyncServerTimeResp
	Data isResp_Data `protobuf_oneof:"data"`
}

func (x *Resp) Reset() {
	*x = Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_ws_ws_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp) ProtoMessage() {}

func (x *Resp) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_ws_ws_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp.ProtoReflect.Descriptor instead.
func (*Resp) Descriptor() ([]byte, []int) {
	return file_sdk_ws_ws_proto_rawDescGZIP(), []int{8}
}

func (x *Resp) GetIdentifier() int32 {
	if x != nil {
		return x.Identifier
	}
	return 0
}

func (x *Resp) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *Resp) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (m *Resp) GetData() isResp_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Resp) GetPushData() *GeneralMsgData {
	if x, ok := x.GetData().(*Resp_PushData); ok {
		return x.PushData
	}
	return nil
}

func (x *Resp) GetPullMsgBySeqListResp() *PullMsgBySeqListResp {
	if x, ok := x.GetData().(*Resp_PullMsgBySeqListResp); ok {
		return x.PullMsgBySeqListResp
	}
	return nil
}

func (x *Resp) GetMaxAndMinSeqResp() *GetMsgMaxAndMinSeqResp {
	if x, ok := x.GetData().(*Resp_MaxAndMinSeqResp); ok {
		return x.MaxAndMinSeqResp
	}
	return nil
}

func (x *Resp) GetPullSeqFinishResp() *PullSeqFinishResp {
	if x, ok := x.GetData().(*Resp_PullSeqFinishResp); ok {
		return x.PullSeqFinishResp
	}
	return nil
}

func (x *Resp) GetNetworkErr() *CommonResp {
	if x, ok := x.GetData().(*Resp_NetworkErr); ok {
		return x.NetworkErr
	}
	return nil
}

func (x *Resp) GetSyncServerTimeResp() *SyncServerTimeResp {
	if x, ok := x.GetData().(*Resp_SyncServerTimeResp); ok {
		return x.SyncServerTimeResp
	}
	return nil
}

type isResp_Data interface {
	isResp_Data()
}

type Resp_PushData struct {
	PushData *GeneralMsgData `protobuf:"bytes,6,opt,name=pushData,proto3,oneof"`
}

type Resp_PullMsgBySeqListResp struct {
	PullMsgBySeqListResp *PullMsgBySeqListResp `protobuf:"bytes,7,opt,name=pullMsgBySeqListResp,proto3,oneof"`
}

type Resp_MaxAndMinSeqResp struct {
	MaxAndMinSeqResp *GetMsgMaxAndMinSeqResp `protobuf:"bytes,8,opt,name=maxAndMinSeqResp,proto3,oneof"`
}

type Resp_PullSeqFinishResp struct {
	PullSeqFinishResp *PullSeqFinishResp `protobuf:"bytes,9,opt,name=pullSeqFinishResp,proto3,oneof"`
}

type Resp_NetworkErr struct {
	NetworkErr *CommonResp `protobuf:"bytes,10,opt,name=networkErr,proto3,oneof"`
}

type Resp_SyncServerTimeResp struct {
	SyncServerTimeResp *SyncServerTimeResp `protobuf:"bytes,11,opt,name=syncServerTimeResp,proto3,oneof"`
}

func (*Resp_PushData) isResp_Data() {}

func (*Resp_PullMsgBySeqListResp) isResp_Data() {}

func (*Resp_MaxAndMinSeqResp) isResp_Data() {}

func (*Resp_PullSeqFinishResp) isResp_Data() {}

func (*Resp_NetworkErr) isResp_Data() {}

func (*Resp_SyncServerTimeResp) isResp_Data() {}

type GeneralMsgData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event       string         `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Topic       int32          `protobuf:"varint,2,opt,name=topic,proto3" json:"topic,omitempty"`
	ContentType MsgContentType `protobuf:"varint,3,opt,name=contentType,proto3,enum=server_api_params.MsgContentType" json:"contentType,omitempty"`
	SeqId       uint32         `protobuf:"varint,4,opt,name=seqId,proto3" json:"seqId,omitempty"`
	Data        []byte         `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	ErrCode     int32          `protobuf:"varint,6,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg      string         `protobuf:"bytes,7,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *GeneralMsgData) Reset() {
	*x = GeneralMsgData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_ws_ws_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralMsgData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralMsgData) ProtoMessage() {}

func (x *GeneralMsgData) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_ws_ws_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralMsgData.ProtoReflect.Descriptor instead.
func (*GeneralMsgData) Descriptor() ([]byte, []int) {
	return file_sdk_ws_ws_proto_rawDescGZIP(), []int{9}
}

func (x *GeneralMsgData) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *GeneralMsgData) GetTopic() int32 {
	if x != nil {
		return x.Topic
	}
	return 0
}

func (x *GeneralMsgData) GetContentType() MsgContentType {
	if x != nil {
		return x.ContentType
	}
	return MsgContentType_None
}

func (x *GeneralMsgData) GetSeqId() uint32 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *GeneralMsgData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GeneralMsgData) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *GeneralMsgData) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

// GetMsgBySeqList
type PullMsgBySeqListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicMsgDataList map[int32]*MsgDataList `protobuf:"bytes,1,rep,name=topicMsgDataList,proto3" json:"topicMsgDataList,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ErrCode          int32                  `protobuf:"varint,2,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg           string                 `protobuf:"bytes,3,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *PullMsgBySeqListResp) Reset() {
	*x = PullMsgBySeqListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_ws_ws_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullMsgBySeqListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullMsgBySeqListResp) ProtoMessage() {}

func (x *PullMsgBySeqListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_ws_ws_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullMsgBySeqListResp.ProtoReflect.Descriptor instead.
func (*PullMsgBySeqListResp) Descriptor() ([]byte, []int) {
	return file_sdk_ws_ws_proto_rawDescGZIP(), []int{10}
}

func (x *PullMsgBySeqListResp) GetTopicMsgDataList() map[int32]*MsgDataList {
	if x != nil {
		return x.TopicMsgDataList
	}
	return nil
}

func (x *PullMsgBySeqListResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *PullMsgBySeqListResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type MsgDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgDataList []*GeneralMsgData `protobuf:"bytes,1,rep,name=msgDataList,proto3" json:"msgDataList,omitempty"`
	NeedSync    int32             `protobuf:"varint,2,opt,name=needSync,proto3" json:"needSync,omitempty"`   // 0:不需要同步 1:需要同步
	LastSeqId   uint32            `protobuf:"varint,3,opt,name=lastSeqId,proto3" json:"lastSeqId,omitempty"` // 拉的太多 需要同步状态，修改本地最大seq。
}

func (x *MsgDataList) Reset() {
	*x = MsgDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_ws_ws_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDataList) ProtoMessage() {}

func (x *MsgDataList) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_ws_ws_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDataList.ProtoReflect.Descriptor instead.
func (*MsgDataList) Descriptor() ([]byte, []int) {
	return file_sdk_ws_ws_proto_rawDescGZIP(), []int{11}
}

func (x *MsgDataList) GetMsgDataList() []*GeneralMsgData {
	if x != nil {
		return x.MsgDataList
	}
	return nil
}

func (x *MsgDataList) GetNeedSync() int32 {
	if x != nil {
		return x.NeedSync
	}
	return 0
}

func (x *MsgDataList) GetLastSeqId() uint32 {
	if x != nil {
		return x.LastSeqId
	}
	return 0
}

// GetMaxAndMinSeq
type GetMsgMaxAndMinSeqResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConvMaxAndMinSeq map[int32]*MaxAndMinSeq `protobuf:"bytes,1,rep,name=convMaxAndMinSeq,proto3" json:"convMaxAndMinSeq,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ErrCode          int32                   `protobuf:"varint,2,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg           string                  `protobuf:"bytes,3,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *GetMsgMaxAndMinSeqResp) Reset() {
	*x = GetMsgMaxAndMinSeqResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_ws_ws_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMsgMaxAndMinSeqResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMsgMaxAndMinSeqResp) ProtoMessage() {}

func (x *GetMsgMaxAndMinSeqResp) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_ws_ws_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMsgMaxAndMinSeqResp.ProtoReflect.Descriptor instead.
func (*GetMsgMaxAndMinSeqResp) Descriptor() ([]byte, []int) {
	return file_sdk_ws_ws_proto_rawDescGZIP(), []int{12}
}

func (x *GetMsgMaxAndMinSeqResp) GetConvMaxAndMinSeq() map[int32]*MaxAndMinSeq {
	if x != nil {
		return x.ConvMaxAndMinSeq
	}
	return nil
}

func (x *GetMsgMaxAndMinSeqResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *GetMsgMaxAndMinSeqResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type MaxAndMinSeq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxSeq uint32 `protobuf:"varint,1,opt,name=maxSeq,proto3" json:"maxSeq,omitempty"`
	MinSeq uint32 `protobuf:"varint,2,opt,name=minSeq,proto3" json:"minSeq,omitempty"`
}

func (x *MaxAndMinSeq) Reset() {
	*x = MaxAndMinSeq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_ws_ws_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxAndMinSeq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxAndMinSeq) ProtoMessage() {}

func (x *MaxAndMinSeq) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_ws_ws_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxAndMinSeq.ProtoReflect.Descriptor instead.
func (*MaxAndMinSeq) Descriptor() ([]byte, []int) {
	return file_sdk_ws_ws_proto_rawDescGZIP(), []int{13}
}

func (x *MaxAndMinSeq) GetMaxSeq() uint32 {
	if x != nil {
		return x.MaxSeq
	}
	return 0
}

func (x *MaxAndMinSeq) GetMinSeq() uint32 {
	if x != nil {
		return x.MinSeq
	}
	return 0
}

// SyncServerTimeResp
type SyncServerTimeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *SyncServerTimeResp) Reset() {
	*x = SyncServerTimeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_ws_ws_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncServerTimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncServerTimeResp) ProtoMessage() {}

func (x *SyncServerTimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_ws_ws_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncServerTimeResp.ProtoReflect.Descriptor instead.
func (*SyncServerTimeResp) Descriptor() ([]byte, []int) {
	return file_sdk_ws_ws_proto_rawDescGZIP(), []int{14}
}

func (x *SyncServerTimeResp) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type PullSeqFinishResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic int32 `protobuf:"varint,1,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *PullSeqFinishResp) Reset() {
	*x = PullSeqFinishResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_ws_ws_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullSeqFinishResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSeqFinishResp) ProtoMessage() {}

func (x *PullSeqFinishResp) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_ws_ws_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSeqFinishResp.ProtoReflect.Descriptor instead.
func (*PullSeqFinishResp) Descriptor() ([]byte, []int) {
	return file_sdk_ws_ws_proto_rawDescGZIP(), []int{15}
}

func (x *PullSeqFinishResp) GetTopic() int32 {
	if x != nil {
		return x.Topic
	}
	return 0
}

var File_sdk_ws_ws_proto protoreflect.FileDescriptor

var file_sdk_ws_ws_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x64, 0x6b, 0x5f, 0x77, 0x73, 0x2f, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x11, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x70, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x41, 0x6e,
	0x64, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xcb, 0x02, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x78, 0x41, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x71,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d,
	0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67,
	0x12, 0x6b, 0x0a, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x78, 0x41, 0x6e, 0x64, 0x4d,
	0x69, 0x6e, 0x53, 0x65, 0x71, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x41, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x52,
	0x65, 0x73, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x78, 0x41, 0x6e, 0x64, 0x4d,
	0x69, 0x6e, 0x53, 0x65, 0x71, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x61, 0x78, 0x41, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x1a, 0x65, 0x0a,
	0x16, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x78, 0x41, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x53,
	0x65, 0x71, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x4d, 0x61, 0x78,
	0x41, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x3e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x22, 0xd4, 0x02, 0x0a, 0x03, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73,
	0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64,
	0x12, 0x3f, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x5a, 0x0a, 0x13, 0x70, 0x75, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x42, 0x79, 0x53, 0x65,
	0x71, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x42, 0x79, 0x53, 0x65, 0x71, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x13, 0x70, 0x75, 0x6c, 0x6c, 0x4d, 0x73,
	0x67, 0x42, 0x79, 0x53, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x54, 0x0a,
	0x0f, 0x6d, 0x61, 0x78, 0x41, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x52, 0x65, 0x71,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x73,
	0x67, 0x4d, 0x61, 0x78, 0x41, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x41, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71,
	0x52, 0x65, 0x71, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a, 0x0a, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x22, 0xd0, 0x01, 0x0a, 0x13, 0x50, 0x75,
	0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x42, 0x79, 0x53, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x5c, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x71, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c,
	0x4d, 0x73, 0x67, 0x42, 0x79, 0x53, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x2e,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0c, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x1a,
	0x5b, 0x0a, 0x11, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x71, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x23, 0x0a, 0x07,
	0x53, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x71, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x65, 0x71, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x35, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x78, 0x41, 0x6e,
	0x64, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xcb, 0x04, 0x0a, 0x04, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x08, 0x70, 0x75, 0x73, 0x68, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x70, 0x75,
	0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5d, 0x0a, 0x14, 0x70, 0x75, 0x6c, 0x6c, 0x4d, 0x73,
	0x67, 0x42, 0x79, 0x53, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x4d, 0x73, 0x67,
	0x42, 0x79, 0x53, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52,
	0x14, 0x70, 0x75, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x42, 0x79, 0x53, 0x65, 0x71, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x41, 0x6e, 0x64, 0x4d,
	0x69, 0x6e, 0x53, 0x65, 0x71, 0x52, 0x65, 0x73, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x78, 0x41, 0x6e, 0x64,
	0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x61,
	0x78, 0x41, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54,
	0x0a, 0x11, 0x70, 0x75, 0x6c, 0x6c, 0x53, 0x65, 0x71, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x50, 0x75,
	0x6c, 0x6c, 0x53, 0x65, 0x71, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x48,
	0x00, 0x52, 0x11, 0x70, 0x75, 0x6c, 0x6c, 0x53, 0x65, 0x71, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45,
	0x72, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x45, 0x72, 0x72, 0x12, 0x57, 0x0a, 0x12, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x12, 0x73, 0x79, 0x6e, 0x63,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdd, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x43, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x4d,
	0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65,
	0x71, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x98, 0x02, 0x0a, 0x14, 0x50, 0x75, 0x6c, 0x6c, 0x4d,
	0x73, 0x67, 0x42, 0x79, 0x53, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x69, 0x0a, 0x10, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x50, 0x75,
	0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x42, 0x79, 0x53, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4d,
	0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x1a, 0x63, 0x0a, 0x15,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x8c, 0x01, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x43, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x65, 0x64, 0x53, 0x79,
	0x6e, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x65, 0x65, 0x64, 0x53, 0x79,
	0x6e, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x71, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x71, 0x49, 0x64,
	0x22, 0x9d, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x78, 0x41, 0x6e,
	0x64, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6b, 0x0a, 0x10, 0x63,
	0x6f, 0x6e, 0x76, 0x4d, 0x61, 0x78, 0x41, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67,
	0x4d, 0x61, 0x78, 0x41, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x4d, 0x61, 0x78, 0x41, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x53, 0x65,
	0x71, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x4d, 0x61, 0x78, 0x41,
	0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x1a, 0x64, 0x0a, 0x15, 0x43, 0x6f,
	0x6e, 0x76, 0x4d, 0x61, 0x78, 0x41, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x4d, 0x61, 0x78, 0x41, 0x6e, 0x64, 0x4d,
	0x69, 0x6e, 0x53, 0x65, 0x71, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x3e, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x41, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x53,
	0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x71,
	0x22, 0x32, 0x0a, 0x12, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x22, 0x29, 0x0a, 0x11, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x65, 0x71, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2a,
	0x36, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x61, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x02, 0x42, 0x5d, 0x5a, 0x5b, 0x67, 0x69, 0x74, 0x2e, 0x38,
	0x39, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x38, 0x39,
	0x74, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x6f, 0x6f,
	0x6c, 0x73, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x64,
	0x6b, 0x5f, 0x77, 0x73, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sdk_ws_ws_proto_rawDescOnce sync.Once
	file_sdk_ws_ws_proto_rawDescData = file_sdk_ws_ws_proto_rawDesc
)

func file_sdk_ws_ws_proto_rawDescGZIP() []byte {
	file_sdk_ws_ws_proto_rawDescOnce.Do(func() {
		file_sdk_ws_ws_proto_rawDescData = protoimpl.X.CompressGZIP(file_sdk_ws_ws_proto_rawDescData)
	})
	return file_sdk_ws_ws_proto_rawDescData
}

var file_sdk_ws_ws_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sdk_ws_ws_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_sdk_ws_ws_proto_goTypes = []interface{}{
	(MsgContentType)(0),            // 0: server_api_params.MsgContentType
	(*GetMaxAndMinSeqReq)(nil),     // 1: server_api_params.GetMaxAndMinSeqReq
	(*GetMaxAndMinSeqResp)(nil),    // 2: server_api_params.GetMaxAndMinSeqResp
	(*CommonResp)(nil),             // 3: server_api_params.CommonResp
	(*Req)(nil),                    // 4: server_api_params.Req
	(*SendMsgReq)(nil),             // 5: server_api_params.SendMsgReq
	(*PullMsgBySeqListReq)(nil),    // 6: server_api_params.PullMsgBySeqListReq
	(*SeqList)(nil),                // 7: server_api_params.SeqList
	(*GetMsgMaxAndMinSeqReq)(nil),  // 8: server_api_params.GetMsgMaxAndMinSeqReq
	(*Resp)(nil),                   // 9: server_api_params.Resp
	(*GeneralMsgData)(nil),         // 10: server_api_params.GeneralMsgData
	(*PullMsgBySeqListResp)(nil),   // 11: server_api_params.PullMsgBySeqListResp
	(*MsgDataList)(nil),            // 12: server_api_params.MsgDataList
	(*GetMsgMaxAndMinSeqResp)(nil), // 13: server_api_params.GetMsgMaxAndMinSeqResp
	(*MaxAndMinSeq)(nil),           // 14: server_api_params.MaxAndMinSeq
	(*SyncServerTimeResp)(nil),     // 15: server_api_params.SyncServerTimeResp
	(*PullSeqFinishResp)(nil),      // 16: server_api_params.PullSeqFinishResp
	nil,                            // 17: server_api_params.GetMaxAndMinSeqResp.GroupMaxAndMinSeqEntry
	nil,                            // 18: server_api_params.PullMsgBySeqListReq.TopicSeqListEntry
	nil,                            // 19: server_api_params.PullMsgBySeqListResp.TopicMsgDataListEntry
	nil,                            // 20: server_api_params.GetMsgMaxAndMinSeqResp.ConvMaxAndMinSeqEntry
}
var file_sdk_ws_ws_proto_depIdxs = []int32{
	17, // 0: server_api_params.GetMaxAndMinSeqResp.groupMaxAndMinSeq:type_name -> server_api_params.GetMaxAndMinSeqResp.GroupMaxAndMinSeqEntry
	5,  // 1: server_api_params.Req.sendMsgReq:type_name -> server_api_params.SendMsgReq
	6,  // 2: server_api_params.Req.pullMsgBySeqListReq:type_name -> server_api_params.PullMsgBySeqListReq
	8,  // 3: server_api_params.Req.maxAndMinSeqReq:type_name -> server_api_params.GetMsgMaxAndMinSeqReq
	18, // 4: server_api_params.PullMsgBySeqListReq.topicSeqList:type_name -> server_api_params.PullMsgBySeqListReq.TopicSeqListEntry
	10, // 5: server_api_params.Resp.pushData:type_name -> server_api_params.GeneralMsgData
	11, // 6: server_api_params.Resp.pullMsgBySeqListResp:type_name -> server_api_params.PullMsgBySeqListResp
	13, // 7: server_api_params.Resp.maxAndMinSeqResp:type_name -> server_api_params.GetMsgMaxAndMinSeqResp
	16, // 8: server_api_params.Resp.pullSeqFinishResp:type_name -> server_api_params.PullSeqFinishResp
	3,  // 9: server_api_params.Resp.networkErr:type_name -> server_api_params.CommonResp
	15, // 10: server_api_params.Resp.syncServerTimeResp:type_name -> server_api_params.SyncServerTimeResp
	0,  // 11: server_api_params.GeneralMsgData.contentType:type_name -> server_api_params.MsgContentType
	19, // 12: server_api_params.PullMsgBySeqListResp.topicMsgDataList:type_name -> server_api_params.PullMsgBySeqListResp.TopicMsgDataListEntry
	10, // 13: server_api_params.MsgDataList.msgDataList:type_name -> server_api_params.GeneralMsgData
	20, // 14: server_api_params.GetMsgMaxAndMinSeqResp.convMaxAndMinSeq:type_name -> server_api_params.GetMsgMaxAndMinSeqResp.ConvMaxAndMinSeqEntry
	14, // 15: server_api_params.GetMaxAndMinSeqResp.GroupMaxAndMinSeqEntry.value:type_name -> server_api_params.MaxAndMinSeq
	7,  // 16: server_api_params.PullMsgBySeqListReq.TopicSeqListEntry.value:type_name -> server_api_params.SeqList
	12, // 17: server_api_params.PullMsgBySeqListResp.TopicMsgDataListEntry.value:type_name -> server_api_params.MsgDataList
	14, // 18: server_api_params.GetMsgMaxAndMinSeqResp.ConvMaxAndMinSeqEntry.value:type_name -> server_api_params.MaxAndMinSeq
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_sdk_ws_ws_proto_init() }
func file_sdk_ws_ws_proto_init() {
	if File_sdk_ws_ws_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sdk_ws_ws_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMaxAndMinSeqReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_ws_ws_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMaxAndMinSeqResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_ws_ws_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_ws_ws_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_ws_ws_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_ws_ws_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullMsgBySeqListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_ws_ws_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeqList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_ws_ws_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMsgMaxAndMinSeqReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_ws_ws_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_ws_ws_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralMsgData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_ws_ws_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullMsgBySeqListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_ws_ws_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_ws_ws_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMsgMaxAndMinSeqResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_ws_ws_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxAndMinSeq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_ws_ws_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncServerTimeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_ws_ws_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullSeqFinishResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sdk_ws_ws_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Req_SendMsgReq)(nil),
		(*Req_PullMsgBySeqListReq)(nil),
		(*Req_MaxAndMinSeqReq)(nil),
	}
	file_sdk_ws_ws_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*Resp_PushData)(nil),
		(*Resp_PullMsgBySeqListResp)(nil),
		(*Resp_MaxAndMinSeqResp)(nil),
		(*Resp_PullSeqFinishResp)(nil),
		(*Resp_NetworkErr)(nil),
		(*Resp_SyncServerTimeResp)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sdk_ws_ws_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sdk_ws_ws_proto_goTypes,
		DependencyIndexes: file_sdk_ws_ws_proto_depIdxs,
		EnumInfos:         file_sdk_ws_ws_proto_enumTypes,
		MessageInfos:      file_sdk_ws_ws_proto_msgTypes,
	}.Build()
	File_sdk_ws_ws_proto = out.File
	file_sdk_ws_ws_proto_rawDesc = nil
	file_sdk_ws_ws_proto_goTypes = nil
	file_sdk_ws_ws_proto_depIdxs = nil
}
